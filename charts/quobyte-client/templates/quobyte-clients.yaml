apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: quobyte-client-ds
  namespace: default
spec:
  selector:
    matchLabels:
      role: client
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/prometheus'
        prometheus.io/port: '55000'
      labels:
        role: client
        version: "{{ .Values.quobyte.clientVersion }}"
    spec:
      containers:
      - name: quobyte-client-csi
        image: {{ .Values.quobyte.clientImage }} 
        imagePullPolicy: Always
        env:
          - name: QUOBYTE_CLIENT_LOG_LEVEL
            value: INFO
          - name: QUOBYTE_REGISTRY
            # Your Quobyte registry endpoint
            # FIXME namespace might not be default
            value:  {{ .Values.quobyte.registry }}
          - name: QUOBYTE_MOUNT_POINT
            value:  {{ .Values.quobyte.clientMountPoint }}
          - name: NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        ports:
          - name: http-port
            containerPort: 55000
            hostPort: 55000
            protocol: TCP
        readinessProbe:
          timeoutSeconds: 5
          httpGet:
            port: 55000
            path: /
        livenessProbe:
          initialDelaySeconds: 30
          timeoutSeconds: 5
          httpGet:
            port: 55000
            path: /
        command:
          - /bin/bash
          - -xec
          - |
            if cut -d" " -f2 /proc/self/mounts | grep -q ${QUOBYTE_MOUNT_POINT}; then
              umount -l ${QUOBYTE_MOUNT_POINT}
            fi
            mkdir -p ${QUOBYTE_MOUNT_POINT}
            mkdir -p /root/.quobyte /home/quobyte/mounts
            if find "${QUOBYTE_MOUNT_POINT}/mounts" -mindepth 1 -print -quit 2>/dev/null | grep -q .; then
                echo "POLLUTED MOUNT POINT DETECTED! Cannot use $QUOBYTE_MOUNT_POINT as a mount point."
                echo "Please remove all files and directories from $QUOBYTE_MOUNT_POINT and "
                echo "run 'chattr +i $QUOBYTE_MOUNT_POINT' to prevent future mount point pollution."
            else
              # set the mount point immutable. As long as mount.quobyte does not run,
              # other processes cannot write data to this dir.
              /usr/bin/mount.quobyte --hostname ${NODENAME} \
                --http-port 55000 -f \
                -d ${QUOBYTE_CLIENT_LOG_LEVEL} -l /dev/stdout ${OPTS} \
                --minidump-path /tmp/minidumps --allow-minidump-upload \
                ${QUOBYTE_REGISTRY}/ ${QUOBYTE_MOUNT_POINT}
            fi
        securityContext:
          privileged: true
        volumeMounts:
          - name: quobyte-mount
            mountPath: {{ .Values.quobyte.volumeMountPoint }}
            mountPropagation: Bidirectional
          - name: minidumps-dir
            mountPath: /tmp/minidumps
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash", "-xc", "umount -l ${QUOBYTE_MOUNT_POINT}"]
      volumes:
      - name: quobyte-mount
        hostPath:
          path: {{ .Values.quobyte.volumeMountPoint }}
      - name: minidumps-dir
        hostPath:
          path: /var/lib/quobyte/.minidumps
